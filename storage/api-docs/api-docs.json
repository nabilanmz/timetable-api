{
    "openapi": "3.0.0",
    "info": {
        "title": "Timetable API",
        "description": "API documentation for the Timetable application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "operationId": "7c1cf647d76fad4b3eb1549fa4fe2f4c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/days": {
            "get": {
                "tags": [
                    "Days"
                ],
                "summary": "Get list of days",
                "description": "Returns list of days",
                "operationId": "getDaysList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Day"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/generated-timetables": {
            "get": {
                "tags": [
                    "Generated Timetables"
                ],
                "summary": "Get the active generated timetable for the authenticated user",
                "description": "Returns the active generated timetable",
                "operationId": "getActiveGeneratedTimetable",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneratedTimetable"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "No active timetable found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Generated Timetables"
                ],
                "summary": "Generate a new timetable based on user preferences",
                "description": "Returns a newly generated timetable",
                "operationId": "generateTimetable",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneratedTimetable"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Failed to generate timetable"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/lecturers": {
            "get": {
                "tags": [
                    "Lecturers"
                ],
                "summary": "Get list of lecturers",
                "description": "Returns list of lecturers",
                "operationId": "getLecturersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lecturer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Lecturers"
                ],
                "summary": "Store new lecturer",
                "description": "Returns lecturer data",
                "operationId": "storeLecturer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lecturer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lecturer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/lecturers/{id}": {
            "get": {
                "tags": [
                    "Lecturers"
                ],
                "summary": "Get lecturer information",
                "description": "Returns lecturer data",
                "operationId": "getLecturerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lecturer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lecturer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Lecturers"
                ],
                "summary": "Update existing lecturer",
                "description": "Returns updated lecturer data",
                "operationId": "updateLecturer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lecturer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lecturer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lecturer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lecturers"
                ],
                "summary": "Delete existing lecturer",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteLecturer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lecturer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all settings",
                "description": "Returns a key-value pair of all settings",
                "operationId": "getSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsList"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update settings",
                "description": "Updates multiple settings at once",
                "operationId": "updateSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/subjects": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get list of subjects",
                "description": "Returns list of subjects",
                "operationId": "getSubjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subject"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Store new subject",
                "description": "Returns subject data",
                "operationId": "storeSubject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subject"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/subjects/{id}": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get subject information",
                "description": "Returns subject data",
                "operationId": "getSubjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Update existing subject",
                "description": "Returns updated subject data",
                "operationId": "updateSubject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Delete existing subject",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSubject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/time-slots": {
            "get": {
                "tags": [
                    "TimeSlots"
                ],
                "summary": "Get list of time slots",
                "description": "Returns list of time slots",
                "operationId": "getTimeSlotsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeSlot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable-change-requests": {
            "get": {
                "tags": [
                    "Timetable Change Requests"
                ],
                "summary": "Get list of timetable change requests (Admin only)",
                "description": "Returns list of timetable change requests",
                "operationId": "getChangeRequestsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimetableChangeRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Timetable Change Requests"
                ],
                "summary": "Store new timetable change request",
                "description": "Returns change request data",
                "operationId": "storeChangeRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "generated_timetable_id",
                                    "message"
                                ],
                                "properties": {
                                    "generated_timetable_id": {
                                        "type": "integer"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimetableChangeRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/timetable-change-requests/{id}": {
            "get": {
                "tags": [
                    "Timetable Change Requests"
                ],
                "summary": "Get change request information (Admin or owner)",
                "description": "Returns change request data",
                "operationId": "getChangeRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Change Request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimetableChangeRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Timetable Change Requests"
                ],
                "summary": "Update existing change request (Admin only)",
                "description": "Returns updated change request data",
                "operationId": "updateChangeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Change Request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "approved",
                                            "rejected"
                                        ]
                                    },
                                    "admin_response": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimetableChangeRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Timetable Change Requests"
                ],
                "summary": "Delete existing change request (Admin only)",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteChangeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Change Request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/timetables": {
            "get": {
                "tags": [
                    "Timetables"
                ],
                "summary": "Get list of timetables for the authenticated user",
                "description": "Returns list of timetables",
                "operationId": "getTimetablesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Timetable"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Timetables"
                ],
                "summary": "Store new timetable",
                "description": "Returns timetable data",
                "operationId": "storeTimetable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Timetable"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Timetable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/timetables/{id}": {
            "get": {
                "tags": [
                    "Timetables"
                ],
                "summary": "Get timetable information",
                "description": "Returns timetable data",
                "operationId": "getTimetableById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timetable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Timetable"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Timetables"
                ],
                "summary": "Update existing timetable",
                "description": "Returns updated timetable data",
                "operationId": "updateTimetable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timetable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Timetable"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Timetable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Timetables"
                ],
                "summary": "Delete existing timetable",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTimetable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Timetable id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/timetable-preferences": {
            "post": {
                "tags": [
                    "Timetable Preferences"
                ],
                "summary": "Store or update user's timetable preferences",
                "description": "Returns the created or updated preference data",
                "operationId": "storeTimetablePreference",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimetablePreferenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimetablePreference"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Day": {
                "title": "Day",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Monday"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "GeneratedTimetable": {
                "title": "Generated Timetable",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "user_id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "timetable": {
                        "type": "object"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Lecturer": {
                "title": "Lecturer",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "department": {
                        "type": "string",
                        "example": "Computer Science"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "SettingsList": {
                "title": "Settings List",
                "properties": {
                    "max_subjects_per_day": {
                        "type": "string",
                        "example": "5"
                    },
                    "max_concurrent_subjects": {
                        "type": "string",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "Subject": {
                "title": "Subject",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Introduction to Programming"
                    },
                    "code": {
                        "type": "string",
                        "example": "CS101"
                    },
                    "description": {
                        "type": "string",
                        "example": "An introductory course on programming fundamentals."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "TimeSlot": {
                "title": "TimeSlot",
                "required": [
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "10:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "TimetableChangeRequest": {
                "title": "Timetable Change Request",
                "required": [
                    "generated_timetable_id",
                    "message"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "user_id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "generated_timetable_id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ]
                    },
                    "admin_response": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "generated_timetable": {
                        "$ref": "#/components/schemas/GeneratedTimetable"
                    }
                },
                "type": "object"
            },
            "Timetable": {
                "title": "Timetable",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "timetable_entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimetableEntry"
                        }
                    }
                },
                "type": "object"
            },
            "TimetablePreferenceRequest": {
                "title": "Timetable Preference Request",
                "required": [
                    "preferences"
                ],
                "properties": {
                    "preferences": {
                        "description": "A key-value object of user preferences for timetable generation.",
                        "type": "object",
                        "example": {
                            "prefer_morning": true,
                            "max_consecutive_classes": 3
                        }
                    }
                },
                "type": "object"
            },
            "TimetableEntry": {
                "title": "Timetable Entry",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "timetable_id": {
                        "type": "integer"
                    },
                    "subject_id": {
                        "type": "integer"
                    },
                    "lecturer_id": {
                        "type": "integer"
                    },
                    "day_id": {
                        "type": "integer"
                    },
                    "time_slot_id": {
                        "type": "integer"
                    },
                    "activity": {
                        "type": "string"
                    },
                    "section": {
                        "type": "string"
                    },
                    "venue": {
                        "type": "string"
                    },
                    "tied_to": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Subject"
                    },
                    "lecturer": {
                        "$ref": "#/components/schemas/Lecturer"
                    },
                    "day": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "time_slot": {
                        "$ref": "#/components/schemas/TimeSlot"
                    }
                },
                "type": "object"
            },
            "TimetablePreference": {
                "title": "Timetable Preference",
                "required": [
                    "preferences"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "user_id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Days",
            "description": "Days"
        },
        {
            "name": "Generated Timetables",
            "description": "Generated Timetables"
        },
        {
            "name": "Lecturers",
            "description": "Lecturers"
        },
        {
            "name": "Settings",
            "description": "Settings"
        },
        {
            "name": "Subjects",
            "description": "Subjects"
        },
        {
            "name": "TimeSlots",
            "description": "TimeSlots"
        },
        {
            "name": "Timetable Change Requests",
            "description": "Timetable Change Requests"
        },
        {
            "name": "Timetables",
            "description": "Timetables"
        },
        {
            "name": "Timetable Preferences",
            "description": "Timetable Preferences"
        }
    ]
}